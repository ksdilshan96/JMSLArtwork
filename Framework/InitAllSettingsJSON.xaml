<Activity mc:Ignorable="sads sap sap2010" x:Class="test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigurationFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_TemplateConfigurationFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_JsonConfiguration" Type="OutArgument(njl:JObject)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="611,60" Id="Assign_2" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="611,60" Id="Assign_1" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="464,60" Id="Assign_3" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="464,60" Id="Assign_4" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="464,87" Id="InvokeWorkflowFile_1" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="200,22" Id="Throw_1" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="464,208" Id="If_2" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="486,659" Id="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="611,807" Id="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="611,60" Id="Assign_5" />
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="633,1303" Id="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="673,1383" Id="test_1" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
  <Sequence sap2010:Annotation.AnnotationText="The workflow reads a JSON file from the disk and outputs a JObjectjsonConfiguration that can be passed and used throughout the program. If the templatepath is defined and the template file exists, it validates the structure of the JSON configuration file against the template. If the templates do not match an exception is thrown." DisplayName="InitAllSettingsJSON" sap2010:WorkflowViewState.IdRef="Sequence_1" sads:DebugSymbol.Symbol="d4gBQzpcVXNlcnNcbWloYWkuZHVuYXJlYW51XERvY3VtZW50c1xVaVBhdGhcVGVtcGxhdGVzXFVpUGF0aCBFbmNoYW5jZWQgUkVGcmFtZXdvcmtcRW5oYW5jZWQtUkVGcmFtZXdvcmtcRnJhbWV3b3JrXEluaXRBbGxTZXR0aW5nc0pTT04ueGFtbBxIA40BDgIBAU8FVg4CASRXBV4OAgEgXwWDAQoCAQeEAQWLAQ4CAQJUMFRcAgEnUTFRRwIBJVwzXFgCASNZNFlHAgEhXxNfiAECAQhhCYEBFAIBCYkBM4kBRgIBBYYBNIYBSwIBA2ULbBQCARxtC3QUAgEYdQt7IwIBEHwLgAEQAgEKajZqagIBH2c3Z0gCAR1yOXJZAgEbbzpvSAIBGXlWeWkCARZ4UXhfAgEUd053XwIBEnXMAXX2AQIBEXwZfEcCAQt+D37aAQIBDX5Ffq0BAgEO">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="configurationContent" />
      <Variable x:TypeArguments="x:String" Name="templateContent" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonTemplate" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonConfiguration" />
    </Sequence.Variables>
    <Assign DisplayName="Read input JSON content" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[configurationContent]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[file.ReadAllText(in_ConfigurationFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Parse and store in JObject" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JObject">[jsonConfiguration]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JObject">[JObject.Parse(configurationContent)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[not(string.IsNullOrEmpty(in_TemplateConfigurationFilePath)) AndAlso file.Exists(in_TemplateConfigurationFilePath)]" DisplayName="If we must match a template" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="Match template" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="firstDifference" />
          </Sequence.Variables>
          <Assign DisplayName="Read Template JSON content" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[templateContent]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[file.ReadAllText(in_TemplateConfigurationFilePath)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Parse and store in JObject" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="njl:JObject">[jsonTemplate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="njl:JObject">[JObject.Parse(templateContent)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ValidateJsonConfiguration workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\ValidateJsonConfiguration.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="out_difference">[firstDifference]</OutArgument>
              <InArgument x:TypeArguments="njl:JObject" x:Key="in_jsonTemplate">[jsonTemplate]</InArgument>
              <InArgument x:TypeArguments="njl:JObject" x:Key="in_jsonConfiguration">[jsonConfiguration]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[not(string.IsNullOrEmpty(firstDifference))]" DisplayName="If template and configuration do not match" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Throw DisplayName="Throw System Exception" Exception="[new System.Exception(&quot;Configuration file does not match the template: &quot; + firstDifference)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <Assign DisplayName="Assign output" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="njl:JObject">[out_JsonConfiguration]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="njl:JObject">[jsonConfiguration]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>