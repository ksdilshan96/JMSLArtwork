<Activity mc:Ignorable="sap sap2010" x:Class="Rotate_Landscape_to_Portrait" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ImageFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_ImageWidth" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_ImageHeight" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_AspectRatio" Type="OutArgument(x:Double)" />
    <x:Property Name="in_Condition" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Rotate_Landscape_to_Portrait.in_ImageFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Rotate_Landscape_to_Portrait.in_ImageFilePath>
  <this:Rotate_Landscape_to_Portrait.in_Condition>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:Rotate_Landscape_to_Portrait.in_Condition>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,515</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Rotate_Landscape_to_Portrait_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Rotate_Landscape_to_Portrait" sap:VirtualizedContainerService.HintSize="376,444" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="is_ImageRotated" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Load image and read image width and height and calculate the Aspect ratio and based on Aspect ration rotation will occuer" Code="    Dim rft As RotateFlipType = RotateFlipType.RotateNoneFlipNone   &#xA;&#x9;Dim img As Bitmap =New Bitmap( sImageFilePath, True)&#xA;&#x9;bReturn = False&#xA;&#x9;WIdth = img.Width&#xA;&#x9;Height = img.Height&#xA;&#x9;&#xA;&#x9;AspectRatio = WIdth/Height&#x9;&#xA;&#x9;&#xA;&#x9;If in_Condition Then&#xA;&#x9;&#x9;If AspectRatio&gt;1.2 Then &#xA;&#x9;&#x9; rft = RotateFlipType.Rotate90FlipNone&#xA;&#x9;&#x9; img.RotateFlip(rft)&#xA;&#x9;&#x9; WIdth = img.Width&#xA;&#x9;&#x9; Height = img.Height&#xA;      System.IO.File.Delete(sImageFilePath)&#xA;     img.Save(sImageFilePath, System.Drawing.Imaging.ImageFormat.Png)&#xA;      bReturn = True&#xA;&#x9; End If&#xA; End If&#xA;  " DisplayName="This will correct Landscape to Portrait" sap:VirtualizedContainerService.HintSize="334,221" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="sImageFilePath">[in_ImageFilePath]</InArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="bReturn">[is_ImageRotated]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="WIdth">[out_ImageWidth]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="Height">[out_ImageHeight]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="AspectRatio">[out_AspectRatio]</OutArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Condition">[in_Condition]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message - Image Rotation details " sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Image Rotation : &quot;  + Environment.NewLine +&quot;Product Rotated : &quot;+ is_ImageRotated.ToString + Environment.NewLine+ &quot;image Width : &quot; + out_ImageWidth.ToString +Environment.NewLine+ &quot;image Height : &quot;+out_ImageHeight.ToString]" />
  </Sequence>
</Activity>